# AI Task Delegation Platform - Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taskdelegation-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: taskdelegation
      POSTGRES_USER: taskdelegation
      POSTGRES_PASSWORD: taskdelegation_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - taskdelegation-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskdelegation -d taskdelegation"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: taskdelegation-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - taskdelegation-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: taskdelegation-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://taskdelegation:taskdelegation_password@postgres:5432/taskdelegation
      
      # Redis
      REDIS_URL: redis://:redis_password@redis:6379
      
      # NextAuth
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-here
      
      # OAuth Providers
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      GITHUB_CLIENT_ID: your-github-client-id
      GITHUB_CLIENT_SECRET: your-github-client-secret
      
      # AI/ML Configuration
      TF_CPP_MIN_LOG_LEVEL: 2
      NODE_ENV: production
      
      # Features
      ENABLE_AI_FEATURES: true
      ENABLE_REAL_TIME: true
      
      # External Services
      STRIPE_SECRET_KEY: your-stripe-secret-key
      STRIPE_WEBHOOK_SECRET: your-stripe-webhook-secret
      
      # Email (Optional)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASSWORD: your-app-password
      
      # Monitoring (Optional)
      SENTRY_DSN: your-sentry-dsn
      
    ports:
      - "3000:3000"
    networks:
      - taskdelegation-network
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Python ML Service (Optional - for advanced AI features)
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: taskdelegation-ml
    restart: unless-stopped
    environment:
      POSTGRES_URL: postgresql://taskdelegation:taskdelegation_password@postgres:5432/taskdelegation
      REDIS_URL: redis://:redis_password@redis:6379
      MODEL_PATH: /app/models
    volumes:
      - ml_models:/app/models
      - ml_logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - taskdelegation-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: taskdelegation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - taskdelegation-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  ml_models:
    driver: local
  ml_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  taskdelegation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16