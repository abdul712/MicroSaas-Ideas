// Lead Magnet Creator - Enterprise Database Schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Organizations (Multi-tenant)
model Organization {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  domain      String?
  subscription String   @default("starter") // starter, professional, enterprise
  planLimits  Json     @default("{}")
  usage       Json     @default("{}")
  settings    Json     @default("{}")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  users        User[]
  leadMagnets  LeadMagnet[]
  templates    Template[]
  brandKits    BrandKit[]
  integrations Integration[]
  analytics    Analytics[]
  webhooks     Webhook[]
  auditLogs    AuditLog[]

  @@map("organizations")
}

// Users
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  avatar        String?
  role          String    @default("member") // owner, admin, member, viewer
  permissions   Json      @default("[]")
  lastLoginAt   DateTime?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  // Auth
  accounts Account[]
  sessions Session[]

  // Relations
  leadMagnetsCreated  LeadMagnet[] @relation("CreatedBy")
  leadMagnetsAssigned LeadMagnet[] @relation("AssignedTo")
  templatesCreated    Template[]
  generations         AIGeneration[]
  auditLogs           AuditLog[]

  @@map("users")
}

// NextAuth.js compatibility
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// Lead Magnets
model LeadMagnet {
  id          String   @id @default(cuid())
  title       String
  description String?
  type        String   // ebook, checklist, template, calculator, infographic
  status      String   @default("draft") // draft, published, archived
  content     Json     @default("{}")
  design      Json     @default("{}")
  settings    Json     @default("{}")
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  // User relationships
  createdById String
  createdBy   User   @relation("CreatedBy", fields: [createdById], references: [id])
  assignedTo  User?  @relation("AssignedTo", fields: [assignedToId], references: [id])
  assignedToId String?

  // Template relationship
  templateId String?
  template   Template? @relation(fields: [templateId], references: [id])

  // Relations
  landingPages  LandingPage[]
  optinForms    OptinForm[]
  leads         Lead[]
  analytics     Analytics[]
  abTests       ABTest[]
  generations   AIGeneration[]
  files         File[]

  @@map("lead_magnets")
}

// Templates
model Template {
  id          String   @id @default(cuid())
  title       String
  description String?
  category    String   // ebook, checklist, template, calculator, infographic
  industry    String?  // tech, healthcare, finance, education, etc.
  thumbnail   String?
  design      Json     @default("{}")
  content     Json     @default("{}")
  metadata    Json     @default("{}")
  isPublic    Boolean  @default(false)
  downloads   Int      @default(0)
  rating      Float?
  tags        String[] @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  // User relationship
  createdById String
  createdBy   User   @relation(fields: [createdById], references: [id])

  // Relations
  leadMagnets LeadMagnet[]

  @@map("templates")
}

// Landing Pages
model LandingPage {
  id           String   @id @default(cuid())
  title        String
  url          String   @unique
  customDomain String?
  design       Json     @default("{}")
  seoSettings  Json     @default("{}")
  isPublished  Boolean  @default(false)
  views        Int      @default(0)
  conversions  Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relationships
  leadMagnetId String
  leadMagnet   LeadMagnet @relation(fields: [leadMagnetId], references: [id], onDelete: Cascade)

  // Relations
  optinForms OptinForm[]
  analytics  Analytics[]
  abTests    ABTest[]

  @@map("landing_pages")
}

// Opt-in Forms
model OptinForm {
  id             String   @id @default(cuid())
  name           String
  fields         Json     @default("[]")
  design         Json     @default("{}")
  validationRules Json    @default("{}")
  thankYouPage   Json     @default("{}")
  triggers       Json     @default("{}")
  isActive       Boolean  @default(true)
  submissions    Int      @default(0)
  conversions    Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  leadMagnetId   String
  leadMagnet     LeadMagnet   @relation(fields: [leadMagnetId], references: [id], onDelete: Cascade)
  landingPageId  String?
  landingPage    LandingPage? @relation(fields: [landingPageId], references: [id])

  // Relations
  leads     Lead[]
  analytics Analytics[]
  abTests   ABTest[]

  @@map("optin_forms")
}

// Leads
model Lead {
  id         String   @id @default(cuid())
  email      String
  data       Json     @default("{}")
  source     String?  // form, popup, inline, etc.
  referrer   String?
  ipAddress  String?
  userAgent  String?
  tags       String[] @default([])
  status     String   @default("active") // active, unsubscribed, bounced
  score      Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationships
  leadMagnetId String
  leadMagnet   LeadMagnet @relation(fields: [leadMagnetId], references: [id], onDelete: Cascade)
  optinFormId  String?
  optinForm    OptinForm? @relation(fields: [optinFormId], references: [id])

  @@map("leads")
}

// AI Content Generation
model AIGeneration {
  id           String   @id @default(cuid())
  type         String   // content, image, design
  prompt       String
  parameters   Json     @default("{}")
  result       Json     @default("{}")
  status       String   @default("pending") // pending, completed, failed
  error        String?
  tokensUsed   Int?
  cost         Decimal? @db.Decimal(10, 4)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relationships
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  leadMagnetId String?
  leadMagnet   LeadMagnet? @relation(fields: [leadMagnetId], references: [id])

  @@map("ai_generations")
}

// Brand Kits
model BrandKit {
  id          String   @id @default(cuid())
  name        String
  colors      Json     @default("[]")
  fonts       Json     @default("[]")
  logos       Json     @default("[]")
  guidelines  Json     @default("{}")
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@map("brand_kits")
}

// A/B Testing
model ABTest {
  id            String   @id @default(cuid())
  name          String
  type          String   // form, page, email
  status        String   @default("draft") // draft, running, paused, completed
  variants      Json     @default("[]")
  traffic       Json     @default("{}")
  results       Json     @default("{}")
  significance  Float?
  winner        String?
  startedAt     DateTime?
  endedAt       DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  leadMagnetId  String?
  leadMagnet    LeadMagnet?   @relation(fields: [leadMagnetId], references: [id])
  landingPageId String?
  landingPage   LandingPage? @relation(fields: [landingPageId], references: [id])
  optinFormId   String?
  optinForm     OptinForm?   @relation(fields: [optinFormId], references: [id])

  @@map("ab_tests")
}

// Analytics
model Analytics {
  id        String   @id @default(cuid())
  date      DateTime @db.Date
  metrics   Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  // Relationships
  leadMagnetId  String?
  leadMagnet    LeadMagnet?  @relation(fields: [leadMagnetId], references: [id])
  landingPageId String?
  landingPage   LandingPage? @relation(fields: [landingPageId], references: [id])
  optinFormId   String?
  optinForm     OptinForm?   @relation(fields: [optinFormId], references: [id])

  @@unique([organizationId, date, leadMagnetId, landingPageId, optinFormId])
  @@map("analytics")
}

// Integrations
model Integration {
  id          String   @id @default(cuid())
  name        String
  type        String   // email, crm, webhook, zapier
  provider    String   // mailchimp, convertkit, hubspot, etc.
  config      Json     @default("{}")
  credentials Json     @default("{}")
  status      String   @default("active") // active, inactive, error
  lastSync    DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@map("integrations")
}

// Webhooks
model Webhook {
  id        String   @id @default(cuid())
  url       String
  events    String[] @default([])
  secret    String?
  isActive  Boolean  @default(true)
  lastTried DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@map("webhooks")
}

// File Storage
model File {
  id        String   @id @default(cuid())
  name      String
  type      String
  size      Int
  url       String
  metadata  Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  leadMagnetId String?
  leadMagnet   LeadMagnet? @relation(fields: [leadMagnetId], references: [id])

  @@map("files")
}

// Audit Logs
model AuditLog {
  id        String   @id @default(cuid())
  action    String
  resource  String
  resourceId String?
  changes   Json     @default("{}")
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())

  // Multi-tenant relationship
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  // User relationship
  userId String?
  user   User?  @relation(fields: [userId], references: [id])

  @@map("audit_logs")
}

// Indexes for performance
@@index([createdAt], map: "idx_audit_logs_created_at")
@@index([organizationId, date], map: "idx_analytics_org_date")
@@index([organizationId, status], map: "idx_lead_magnets_org_status")
@@index([organizationId, email], map: "idx_leads_org_email")
@@index([organizationId, type], map: "idx_integrations_org_type")