version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: simple-crm-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-simple_crm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-simple_crm}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-simple_crm_user} -d ${POSTGRES_DB:-simple_crm}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: simple-crm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - crm-network

  # Next.js Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: simple-crm-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-simple_crm_user}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-simple_crm}?schema=public
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-dev-secret-please-change-in-production}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - crm-network
    command: npm run dev

  # Mailhog for Email Testing (Development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: simple-crm-mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - crm-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  crm-network:
    driver: bridge