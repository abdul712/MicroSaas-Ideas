version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: loyalty_program
      POSTGRES_USER: loyalty_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    ports:
      - "5432:5432"
    volumes:
      - loyalty_db_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loyalty_user -d loyalty_program"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - loyalty_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Main Application
  app:
    build: .
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://loyalty_user:${DB_PASSWORD:-secure_password_123}@db:5432/loyalty_program
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-fallback_secret_key_change_in_production}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database migration service (runs once)
  migrate:
    build: .
    command: ["npx", "prisma", "migrate", "deploy"]
    environment:
      - DATABASE_URL=postgresql://loyalty_user:${DB_PASSWORD:-secure_password_123}@db:5432/loyalty_program
    depends_on:
      db:
        condition: service_healthy
    restart: no

volumes:
  loyalty_db_data:
  loyalty_redis_data: